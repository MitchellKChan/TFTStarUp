/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_util_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/util/modal */ \"./src/scripts/util/modal.js\");\n/* harmony import */ var _scripts_units__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/units */ \"./src/scripts/units.js\");\n/* harmony import */ var _scripts_shop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/shop */ \"./src/scripts/shop.js\");\n/* harmony import */ var _scripts_bench__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/bench */ \"./src/scripts/bench.js\");\n\n\n\n\n\n// Initialize units variable to be assigned to a Units object once champion info is fetched\nlet units;\ntry {\n  const res = await fetch(\"./src/scripts/tft-champion.json\");\n  if (res.ok) {\n    const promise = await res.json();\n    const list = promise.data;\n    units = new _scripts_units__WEBPACK_IMPORTED_MODULE_1__[\"default\"](list); // assign a Units object to units for constructing a Shop object\n  } else {\n    throw res;\n  }\n} catch (err) {\n  console.log(err);\n}\n\n// declare object for the page's body\nconst body = document.querySelector(\"body\");\nbody.style.backgroundImage = \"url(src/styles/pageBackground.jpeg)\";\n\n// declare object for the modal\nconst modal = document.querySelector(\".modal\");\n\n// declare object for the settings form in the modal\nconst form = document.querySelector(\".settings-form\");\n\n// declare a Shop object for tracking level, gold, tier odds, and shop units\nconst shop = new _scripts_shop__WEBPACK_IMPORTED_MODULE_2__[\"default\"](3, 0, 6, units, handleBuyUnit);\n\n// declare a Bench object for tracking units that have been purchased\nconst bench = new _scripts_bench__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n\n// declare objects for the top section, which contains the title, timer,\n// nav links, and settings\nconst title = document.createElement(\"div\");\nconst timer = document.createElement(\"div\");\nconst navLinks = document.createElement(\"div\");\nconst settings = document.createElement(\"div\");\nconst settingsIcon = document.createElement(\"img\");\nconst topSection = document.createElement(\"div\");\nconst topRight = document.createElement(\"div\");\n\n// declare objects for the bottom section, which contains the\n// bench and shop\nconst shopEl = document.createElement(\"div\");\nconst bottomSection = document.createElement(\"div\");\n\n// declare objects contained by the shop object, which are the \n// current level, current shop odds, current gold, progress to \n// next level, buy exp button, refresh button, and shop units\nconst level = document.createElement(\"div\");\nconst odds = document.createElement(\"div\");\nconst levelProgress = document.createElement(\"div\");\nconst gold = document.createElement(\"div\");\n;\nconst expButton = document.createElement(\"button\");\nconst refreshButton = document.createElement(\"button\");\nconst levelInfo = document.createElement(\"div\");\nconst shopButtons = document.createElement(\"div\");\nconst shopInterface = document.createElement(\"div\");\n\n// set inner text and classess for top section objects\ntitle.innerText = \"TFT Star Up\";\ntitle.classList.add(\"title\", \"section\");\ntimer.innerText = \"timer\";\ntimer.classList.add(\"timer\", \"section\");\nnavLinks.innerText = \"navLinks\";\nsettingsIcon.src = \"src/styles/gear.png\";\nsettingsIcon.classList.add(\"settings-icon\");\nsettings.append(settingsIcon);\nsettings.classList.add(\"settings\");\ntopRight.append(navLinks, settings);\ntopRight.classList.add(\"top-right\", \"section\");\ntopSection.classList.add(\"top\");\ntopSection.append(title, timer, topRight);\n\n// set inner text and classess for bottom section objects\nshopEl.classList.add(\"shop\", \"section\");\nbottomSection.classList.add(\"bottom\");\nbottomSection.append(bench.benchEl, shopEl);\n\n// set inner text and clases for shop objects\nlevel.innerText = shop.level;\nlevel.classList.add(\"section\");\nodds.innerText = `${_scripts_shop__WEBPACK_IMPORTED_MODULE_2__[\"default\"].tierOdds[shop.level]}`;\nodds.classList.add(\"section\");\nlevelProgress.innerText = `${shop.currentEpx}/${shop.expToNextLevel}`;\nlevelProgress.classList.add(\"section\");\ngold.innerText = \"gold\";\ngold.classList.add(\"section\");\nlevelInfo.classList.add(\"section\", \"shop-level-info\");\nlevelInfo.append(level, levelProgress, odds, gold);\nexpButton.innerText = \"exp-button\";\nexpButton.classList.add(\"section\", \"exp-button\");\nrefreshButton.innerText = \"refresh-button\";\nrefreshButton.classList.add(\"section\", \"refresh-button\");\nshopButtons.classList.add(\"shop-buttons\");\nshopButtons.append(expButton, refreshButton);\nshop.refresh();\nshopInterface.classList.add(\"shop-interface\", \"section\");\nshopInterface.append(shopButtons, shop.generateShopUnits());\nshopEl.append(levelInfo, shopInterface);\n\n// add event listener for opening modal\nsettingsIcon.addEventListener(\"click\", e => {\n  handleOpenModal(e);\n});\n\n// add event listeners for shop refreshes\nrefreshButton.addEventListener(\"click\", e => {\n  handleRefresh(e);\n});\nbody.addEventListener(\"keydown\", e => {\n  if (e.code === \"KeyD\") handleRefresh(e);\n});\n\n// add event listeners for buying experience\nexpButton.addEventListener(\"click\", e => {\n  handleBuyExp(e);\n});\nbody.addEventListener(\"keydown\", e => {\n  if (e.code === \"KeyF\") handleBuyExp(e);\n});\n\n// add event listener to document to track mouse position for\n// for selling bench units\ndocument.addEventListener(\"mousemove\", e => {\n  window.mouse = [e.clientX, e.clientY];\n});\n\n// add event listener to document to conditionally sell a bench\n// unit if the mouse position is on one\ndocument.addEventListener(\"keydown\", e => {\n  if (e.code === \"KeyE\") handleSellUnit(e);\n});\n\n// add event listener to form to close the modal and start the app\nform.addEventListener(\"submit\", e => {\n  handleStartApp(e);\n});\n\n// function to handle events that trigger shop refreshes\nfunction handleRefresh(event) {\n  event.preventDefault();\n  shop.refresh();\n  // generate a new shopUnits div to replace the current one\n  shopEl.children[1].replaceChild(shop.generateShopUnits(), shopEl.children[1].children[1]);\n}\n\n// function to handle events that trigger buying experience\nfunction handleBuyExp(event) {\n  event.preventDefault();\n  shop.buyExp();\n  if (shop.level < 9) {\n    levelProgress.innerText = `${shop.currentEpx}/${shop.expToNextLevel}`;\n  } else {\n    levelProgress.innerText = shop.expToNextLevel;\n  }\n  level.innerText = shop.level;\n  odds.innerText = _scripts_shop__WEBPACK_IMPORTED_MODULE_2__[\"default\"].tierOdds[shop.level];\n}\n\n// function to handle events that trigger unit purchases; event\n// listener added to return value of shop.generateShopUnits() with \n// this function in shop.js\nfunction handleBuyUnit(event) {\n  event.preventDefault();\n  const unitName = event.target.dataset.unitName;\n  if (unitName) bench.buyUnit(unitName);\n}\n\n// function to handle events that trigger selling of units\nfunction handleSellUnit(event) {\n  event.preventDefault();\n  const hoverElement = document.elementFromPoint(window.mouse[0], window.mouse[1]);\n  const unitName = hoverElement.dataset.unitName;\n  const slotKey = hoverElement.dataset.slotKey;\n  if (unitName && slotKey) {\n    // unit to sell is at the position contained by the 4th index\n    // of the slotKey data attribute; slotkey = `slot${slotIndex}`\n    const slotIndex = Number(slotKey[4]) - 1;\n    bench.removeUnit(slotIndex);\n  }\n}\n\n// function to handle events that trigger opening the modal\nfunction handleOpenModal(event) {\n  event.preventDefault();\n  modal.classList.toggle(\"hidden\");\n}\n\n// function to handle events that trigger starting the app\nfunction handleStartApp(event) {\n  event.preventDefault();\n  modal.classList.toggle(\"hidden\");\n}\nbody.append(topSection, bottomSection);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/bench.js":
/*!******************************!*\
  !*** ./src/scripts/bench.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst dataDragonUrl = \"https://ddragon.leagueoflegends.com/cdn/\";\nclass Bench {\n  constructor() {\n    this.slots = this.#emptyBench(); // units currently on the bench\n    this.benchEl = this.#generateBench(this.slots); // bench element in DOM\n    // units' slot indices organized by unit star level\n    // key: unit name plus star level suffix (1,2,3); e.g., \"Graves1\" != \"Graves2\"\n    // value: array of slot indices; key is deleted if array is empty\n    this.units = {};\n  }\n  buyUnit(unitName) {\n    let slotIndex = 0;\n    while (slotIndex < 9 && this.benchEl.children[slotIndex].children.length != 0) slotIndex++;\n    if (slotIndex < 9) {\n      unitName = this.#imageNameReformat(unitName);\n      const slotKey = `slot${slotIndex + 1}`;\n      const oneStarKey = `${unitName}1`;\n      let slot;\n      if (!this.#hasCopy(oneStarKey)) {\n        // create index array for the unit at a one-star in units object\n        slot = this.#generateSlot(slotKey, unitName);\n        this.units[oneStarKey] = [slotIndex];\n        this.slots[slotKey] = oneStarKey;\n        this.benchEl.replaceChild(slot, this.benchEl.children[slotIndex]);\n      } else {\n        if (this.#canStarUp(oneStarKey)) {\n          this.#addTwoStarUnit(unitName, oneStarKey);\n          const twoStarKey = `${unitName}2`;\n          if (this.#canThreeStar(twoStarKey)) {\n            this.#addThreeStarUnit(unitName, twoStarKey);\n          }\n        } else {\n          // add index to unit's index array in units object\n          this.units[oneStarKey].push(slotIndex);\n          slot = this.#generateSlot(slotKey, unitName);\n          this.slots[slotKey] = oneStarKey;\n          this.benchEl.replaceChild(slot, this.benchEl.children[slotIndex]);\n        }\n      }\n    } else {\n      console.log(\"bench is full, need to sell units to buy more\");\n    }\n  }\n  benchUnitImage(unitName) {\n    if (unitName === \"Silco\") {\n      // Silco has no champion icon as he is a TFT-specific unit; using the TFT picture as the bench image\n      return `${dataDragonUrl}13.18.1/img/tft-champion/TFT9_Silco.TFT_Set9_Stage2.png`;\n    } else if (unitName === \"Ksante\") {\n      // K'Sante's tile image does not follow the general Void name reformatting\n      return `${dataDragonUrl}img/champion/tiles/KSante_0.jpg`;\n    } else if (unitName === \"Reksai\") {\n      // Rek'sai's tile image does not follow the general Void name reformatting\n      return `${dataDragonUrl}img/champion/tiles/RekSai_0.jpg`;\n    } else {\n      // standard unit tile image retrieval\n      return `${dataDragonUrl}img/champion/tiles/${unitName}_0.jpg`;\n    }\n  }\n  removeUnit(slotIndex) {\n    // free up the slot in this.slots at slotIndex\n    const slotKey = `slot${slotIndex + 1}`;\n    const unitKey = this.slots[slotKey];\n    this.slots[slotKey] = \"empty\";\n\n    // if the indices array for unitKey in this.units contains slotIndex:\n    // - remove it from the array\n    this.units[unitKey] = this.units[unitKey].filter(index => index != slotIndex);\n\n    // if the indices array for unitKey in this.units is empty\n    // - delete unitKey from this.units\n    if (this.units[unitKey].length < 1) delete this.units[unitKey];\n\n    // generate empty slot element and replace the previous one at slotIndex in this.benchEl\n    const emptySlot = this.#generateSlot(slotKey, \"empty\");\n    this.benchEl.replaceChild(emptySlot, this.benchEl.children[slotIndex]);\n  }\n\n  // private function only invoked by constructor\n  #generateBench() {\n    let benchSlots = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (Object.keys(benchSlots).length != 9) benchSlots = this.#emptyBench();\n    const bench = document.createElement(\"div\");\n    bench.classList.add(\"bench\", \"section\");\n    Object.entries(benchSlots).forEach(_ref => {\n      let [slotKey, slotValue] = _ref;\n      bench.append(this.#generateSlot(slotKey, slotValue));\n    });\n    return bench;\n  }\n\n  // private function invoked by buyUnit, removeUnit, and #generateBench\n  #generateSlot(slotKey, unitName) {\n    const slot = document.createElement(\"div\");\n    slot.classList.add(\"slot\");\n    if (unitName === \"empty\") {\n      slot.classList.toggle(\"empty\");\n    } else {\n      slot.classList.toggle(\"one-star\");\n      const unitIcon = document.createElement(\"img\");\n      unitIcon.dataset.slotKey = slotKey;\n      unitIcon.dataset.unitName = unitName;\n      unitIcon.src = this.benchUnitImage(unitName);\n      slot.append(unitIcon);\n    }\n    return slot;\n  }\n\n  // private function only invoked if no argument is passed to #generateBench\n  #emptyBench() {\n    const slots = {};\n    for (let i = 1; i <= 9; i++) {\n      slots[`slot${i}`] = \"empty\";\n    }\n    return slots;\n  }\n\n  // privatre function only invoked in buyUnit if unitName has an apostrophe\n  #imageNameReformat(unitName) {\n    if (unitName.includes(\"'\")) {\n      // reformat Void unit names (character after apostrophe is lowercase)\n      const nameParts = unitName.split(\"'\");\n      unitName = nameParts[0] + nameParts[1].toLowerCase();\n    } else if (unitName.includes(\" \")) {\n      // reformat unit name to have no spaces\n      unitName = unitName.split(\" \").join(\"\");\n    }\n    return unitName;\n  }\n\n  // private functions only invoked by buyUnit to appropriately update \n  // this.slots, this.benchEl, and this.units based on units' star levels\n  #hasCopy(unitKey) {\n    return Object.keys(this.units).includes(unitKey);\n  }\n  #canStarUp(unitKey) {\n    return this.units[unitKey].length === 2;\n  }\n  #canThreeStar(unitKey) {\n    return this.units[unitKey].length === 3;\n  }\n  #addTwoStarUnit(unitName, oneStarKey) {\n    // star up first copy of unit and remove the second one from the bench\n    const firstCopyIndex = this.units[oneStarKey].sort()[0];\n    const firstCopySlotKey = `slot${firstCopyIndex + 1}`;\n    const twoStarKey = `${unitName}2`;\n    // remove the two one-starred units at their indices\n    this.units[oneStarKey].sort().forEach(index => {\n      this.removeUnit(index);\n    });\n    if (!this.#hasCopy(twoStarKey)) {\n      this.units[twoStarKey] = [firstCopyIndex];\n    } else {\n      this.units[twoStarKey].push(firstCopyIndex);\n    }\n    this.slots[firstCopySlotKey] = twoStarKey;\n    const slot = this.#generateSlot(firstCopySlotKey, unitName);\n    slot.classList.toggle(\"two-star\");\n    slot.classList.toggle(\"one-star\");\n    this.benchEl.replaceChild(slot, this.benchEl.children[firstCopyIndex]);\n  }\n  #addThreeStarUnit(unitName, twoStarKey) {\n    // star up first copy of unit and remove the second one from the bench\n    const firstCopyIndex = this.units[twoStarKey].sort()[0];\n    const firstCopySlotKey = `slot${firstCopyIndex + 1}`;\n    const threeStarKey = `${unitName}3`;\n    // remove the two two-starred units at their indices\n    this.units[twoStarKey].sort().forEach(index => {\n      this.removeUnit(index);\n    });\n    if (!this.#hasCopy(threeStarKey)) {\n      this.units[threeStarKey] = [firstCopyIndex];\n    } else {\n      this.units[threeStarKey].push(firstCopyIndex);\n    }\n    this.slots[firstCopySlotKey] = threeStarKey;\n    const slot = this.#generateSlot(firstCopySlotKey, unitName);\n    slot.classList.toggle(\"two-star\");\n    slot.classList.toggle(\"three-star\");\n    this.benchEl.replaceChild(slot, this.benchEl.children[firstCopyIndex]);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bench);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/bench.js\n");

/***/ }),

/***/ "./src/scripts/shop.js":
/*!*****************************!*\
  !*** ./src/scripts/shop.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Shop {\n  constructor() {\n    let startingLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n    let currentEpx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let expToNextLevel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;\n    let units = arguments.length > 3 ? arguments[3] : undefined;\n    let handleBuyUnit = arguments.length > 4 ? arguments[4] : undefined;\n    this.level = startingLevel;\n    this.currentEpx = currentEpx;\n    this.expToNextLevel = expToNextLevel;\n    this.units = units;\n    this.unitPool = this.units.unitPool(Shop.tierOdds[this.level]); // an array of unit info objects\n    this.slots = {\n      slot1: \"slot 1\",\n      slot2: \"slot 2\",\n      slot3: \"slot 3\",\n      slot4: \"slot 4\",\n      slot5: \"slot 5\"\n    };\n    this.handleBuyUnit = handleBuyUnit; // event function to pass bought unit to bench\n    // this.shopEl = this.generateShopUnits();\n  }\n\n  buyExp() {\n    if (this.level < 9) {\n      this.currentEpx += 4;\n      if (this.currentEpx >= this.expToNextLevel) this.levelUp();\n    }\n  }\n  levelUp() {\n    this.level++;\n    this.currentEpx = this.currentEpx - this.expToNextLevel;\n    this.expToNextLevel = Shop.levelExp[this.level];\n    this.unitPool = this.units.unitPool(Shop.tierOdds[this.level]);\n  }\n  refresh() {\n    Object.keys(this.slots).map(key => {\n      this.slots[key] = this.units.randomUnit(this.unitPool, Shop.tierOdds[this.level]);\n    });\n  }\n  generateShopUnits() {\n    const shopUnits = document.createElement(\"div\");\n    shopUnits.classList.add(\"section\", \"shop-units\");\n    Object.values(this.slots).forEach(slot => {\n      const slotEl = document.createElement(\"div\");\n      const icon = document.createElement(\"img\");\n      const name = document.createElement(\"div\");\n      icon.src = this.units.shopUnitImage(slot);\n      name.innerText = slot.name;\n      name.classList.add(\"shop-unit-name\");\n      slotEl.append(icon, name);\n      slotEl.classList.add(\"section\", \"shop-unit\", `tier-${slot.tier}`);\n      // add unit name as data attribute for populating bench spaces with correct unit icon\n      for (const child of slotEl.children) child.dataset.unitName = slot.name;\n      shopUnits.append(slotEl);\n    });\n    // add event listener for buying units \n    shopUnits.addEventListener(\"click\", e => this.handleBuyUnit(e));\n    return shopUnits;\n  }\n}\nShop.tierOdds = {\n  1: [1.00, 0.00, 0.00, 0.00, 0.00],\n  2: [1.00, 0.00, 0.00, 0.00, 0.00],\n  3: [0.75, 0.25, 0.00, 0.00, 0.00],\n  4: [0.55, 0.30, 0.15, 0.00, 0.00],\n  5: [0.45, 0.33, 0.20, 0.02, 0.00],\n  6: [0.25, 0.40, 0.30, 0.05, 0.00],\n  7: [0.19, 0.30, 0.35, 0.25, 0.01],\n  8: [0.16, 0.20, 0.35, 0.25, 0.04],\n  9: [0.09, 0.15, 0.30, 0.30, 0.16]\n};\nShop.levelExp = {\n  2: 2,\n  3: 6,\n  4: 10,\n  5: 24,\n  6: 40,\n  7: 60,\n  8: 84,\n  9: \"MAX\"\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Shop);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/shop.js\n");

/***/ }),

/***/ "./src/scripts/units.js":
/*!******************************!*\
  !*** ./src/scripts/units.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst dataDragonUrl = \"https://ddragon.leagueoflegends.com/cdn/\";\nclass Units {\n  constructor(list) {\n    this.list = list;\n  }\n  unitPool(odds) {\n    const tiers = this.#availableTiers(odds);\n    return Object.values(this.list).filter(unit => tiers.includes(unit.tier));\n  }\n  randomUnit(availableUnits, tierOdds) {\n    const randomTier = this.#rollTier(tierOdds);\n    const tierUnits = availableUnits.filter(unit => unit.tier == randomTier);\n    const randomIndex = Math.floor(tierUnits.length * Math.random());\n    return tierUnits[randomIndex];\n  }\n  shopUnitImage(unit) {\n    return `${dataDragonUrl}13.18.1/img/tft-champion/${unit.image.full}`;\n  }\n\n  // private function only invoked by unitPool\n  #availableTiers(odds) {\n    const tiers = [];\n    odds.forEach((odd, i) => {\n      if (odd > 0) tiers.push(i + 1);\n    });\n    return tiers;\n  }\n\n  // private function only invoked by randomUnit\n  #rollTier(tierOdds) {\n    const roll = this.#twoDecimals(Math.random());\n    let rangeStart = 0;\n    let rangeEnd = tierOdds[0];\n    for (let i = 1; i <= tierOdds.length; i++) {\n      if (rangeStart < roll && roll <= rangeEnd) {\n        return i;\n      } else {\n        rangeStart = rangeEnd;\n        rangeEnd = this.#twoDecimals(rangeEnd + tierOdds[i]);\n      }\n    }\n  }\n\n  // private function only invoked by #rollTier\n  #twoDecimals(decimal) {\n    return Math.round(decimal * 100) / 100;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Units);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91bml0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsYUFBYSxHQUFHLDBDQUEwQztBQUVoRSxNQUFNQyxLQUFLLENBQUM7RUFDUkMsV0FBV0EsQ0FBQ0MsSUFBSSxFQUFFO0lBQ2QsSUFBSSxDQUFDQSxJQUFJLEdBQUdBLElBQUk7RUFDcEI7RUFFQUMsUUFBUUEsQ0FBQ0MsSUFBSSxFQUFFO0lBQ1gsTUFBTUMsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDQyxjQUFjLENBQUNGLElBQUksQ0FBQztJQUN4QyxPQUFPRyxNQUFNLENBQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUNOLElBQUksQ0FBQyxDQUFDTyxNQUFNLENBQUNDLElBQUksSUFBSUwsS0FBSyxDQUFDTSxRQUFRLENBQUNELElBQUksQ0FBQ0UsSUFBSSxDQUFDLENBQUM7RUFDN0U7RUFFQUMsVUFBVUEsQ0FBQ0MsY0FBYyxFQUFFQyxRQUFRLEVBQUU7SUFDakMsTUFBTUMsVUFBVSxHQUFHLElBQUksQ0FBQyxDQUFDQyxRQUFRLENBQUNGLFFBQVEsQ0FBQztJQUMzQyxNQUFNRyxTQUFTLEdBQUdKLGNBQWMsQ0FBQ0wsTUFBTSxDQUFDQyxJQUFJLElBQUlBLElBQUksQ0FBQ0UsSUFBSSxJQUFJSSxVQUFVLENBQUM7SUFDeEUsTUFBTUcsV0FBVyxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0gsU0FBUyxDQUFDSSxNQUFNLEdBQUdGLElBQUksQ0FBQ0csTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNoRSxPQUFPTCxTQUFTLENBQUNDLFdBQVcsQ0FBQztFQUNqQztFQUVBSyxhQUFhQSxDQUFDZCxJQUFJLEVBQUU7SUFDaEIsT0FBUSxHQUFFWCxhQUFjLDRCQUEyQlcsSUFBSSxDQUFDZSxLQUFLLENBQUNDLElBQUssRUFBQztFQUN4RTs7RUFFQTtFQUNBLENBQUNwQixjQUFjcUIsQ0FBQ3ZCLElBQUksRUFBRTtJQUNsQixNQUFNQyxLQUFLLEdBQUcsRUFBRTtJQUNoQkQsSUFBSSxDQUFDd0IsT0FBTyxDQUFDLENBQUNDLEdBQUcsRUFBRUMsQ0FBQyxLQUFLO01BQ3JCLElBQUlELEdBQUcsR0FBRyxDQUFDLEVBQUV4QixLQUFLLENBQUMwQixJQUFJLENBQUNELENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQyxDQUFDO0lBQ0YsT0FBT3pCLEtBQUs7RUFDaEI7O0VBRUE7RUFDQSxDQUFDWSxRQUFRZSxDQUFDakIsUUFBUSxFQUFFO0lBQ2hCLE1BQU1rQixJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUNDLFdBQVcsQ0FBQ2QsSUFBSSxDQUFDRyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzdDLElBQUlZLFVBQVUsR0FBRyxDQUFDO0lBQ2xCLElBQUlDLFFBQVEsR0FBR3JCLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDMUIsS0FBSyxJQUFJZSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLElBQUlmLFFBQVEsQ0FBQ08sTUFBTSxFQUFFUSxDQUFDLEVBQUUsRUFBRTtNQUN2QyxJQUFJSyxVQUFVLEdBQUdGLElBQUksSUFBSUEsSUFBSSxJQUFJRyxRQUFRLEVBQUU7UUFDdkMsT0FBT04sQ0FBQztNQUNaLENBQUMsTUFBTTtRQUNISyxVQUFVLEdBQUdDLFFBQVE7UUFDckJBLFFBQVEsR0FBRyxJQUFJLENBQUMsQ0FBQ0YsV0FBVyxDQUFDRSxRQUFRLEdBQUdyQixRQUFRLENBQUNlLENBQUMsQ0FBQyxDQUFDO01BQ3hEO0lBQ0o7RUFDSjs7RUFFQTtFQUNBLENBQUNJLFdBQVdHLENBQUNDLE9BQU8sRUFBRTtJQUNsQixPQUFPbEIsSUFBSSxDQUFDbUIsS0FBSyxDQUFDRCxPQUFPLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRztFQUMxQztBQUNKO0FBRUEsK0RBQWV0QyxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGZ0c3RhcnVwLy4vc3JjL3NjcmlwdHMvdW5pdHMuanM/MzhhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkYXRhRHJhZ29uVXJsID0gXCJodHRwczovL2RkcmFnb24ubGVhZ3Vlb2ZsZWdlbmRzLmNvbS9jZG4vXCI7XG5cbmNsYXNzIFVuaXRzIHtcbiAgICBjb25zdHJ1Y3RvcihsaXN0KSB7XG4gICAgICAgIHRoaXMubGlzdCA9IGxpc3Q7XG4gICAgfVxuXG4gICAgdW5pdFBvb2wob2Rkcykge1xuICAgICAgICBjb25zdCB0aWVycyA9IHRoaXMuI2F2YWlsYWJsZVRpZXJzKG9kZHMpO1xuICAgICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0aGlzLmxpc3QpLmZpbHRlcih1bml0ID0+IHRpZXJzLmluY2x1ZGVzKHVuaXQudGllcikpO1xuICAgIH1cbiAgICBcbiAgICByYW5kb21Vbml0KGF2YWlsYWJsZVVuaXRzLCB0aWVyT2Rkcykge1xuICAgICAgICBjb25zdCByYW5kb21UaWVyID0gdGhpcy4jcm9sbFRpZXIodGllck9kZHMpO1xuICAgICAgICBjb25zdCB0aWVyVW5pdHMgPSBhdmFpbGFibGVVbml0cy5maWx0ZXIodW5pdCA9PiB1bml0LnRpZXIgPT0gcmFuZG9tVGllcik7XG4gICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcih0aWVyVW5pdHMubGVuZ3RoICogTWF0aC5yYW5kb20oKSk7XG4gICAgICAgIHJldHVybiB0aWVyVW5pdHNbcmFuZG9tSW5kZXhdO1xuICAgIH1cbiAgICBcbiAgICBzaG9wVW5pdEltYWdlKHVuaXQpIHtcbiAgICAgICAgcmV0dXJuIGAke2RhdGFEcmFnb25Vcmx9MTMuMTguMS9pbWcvdGZ0LWNoYW1waW9uLyR7dW5pdC5pbWFnZS5mdWxsfWA7XG4gICAgfVxuXG4gICAgLy8gcHJpdmF0ZSBmdW5jdGlvbiBvbmx5IGludm9rZWQgYnkgdW5pdFBvb2xcbiAgICAjYXZhaWxhYmxlVGllcnMob2Rkcykge1xuICAgICAgICBjb25zdCB0aWVycyA9IFtdO1xuICAgICAgICBvZGRzLmZvckVhY2goKG9kZCwgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKG9kZCA+IDApIHRpZXJzLnB1c2goaSArIDEpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRpZXJzO1xuICAgIH1cblxuICAgIC8vIHByaXZhdGUgZnVuY3Rpb24gb25seSBpbnZva2VkIGJ5IHJhbmRvbVVuaXRcbiAgICAjcm9sbFRpZXIodGllck9kZHMpIHtcbiAgICAgICAgY29uc3Qgcm9sbCA9IHRoaXMuI3R3b0RlY2ltYWxzKE1hdGgucmFuZG9tKCkpO1xuICAgICAgICBsZXQgcmFuZ2VTdGFydCA9IDA7XG4gICAgICAgIGxldCByYW5nZUVuZCA9IHRpZXJPZGRzWzBdO1xuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSB0aWVyT2Rkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHJhbmdlU3RhcnQgPCByb2xsICYmIHJvbGwgPD0gcmFuZ2VFbmQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmFuZ2VTdGFydCA9IHJhbmdlRW5kO1xuICAgICAgICAgICAgICAgIHJhbmdlRW5kID0gdGhpcy4jdHdvRGVjaW1hbHMocmFuZ2VFbmQgKyB0aWVyT2Rkc1tpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwcml2YXRlIGZ1bmN0aW9uIG9ubHkgaW52b2tlZCBieSAjcm9sbFRpZXJcbiAgICAjdHdvRGVjaW1hbHMoZGVjaW1hbCkge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChkZWNpbWFsICogMTAwKSAvIDEwMDtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVuaXRzOyJdLCJuYW1lcyI6WyJkYXRhRHJhZ29uVXJsIiwiVW5pdHMiLCJjb25zdHJ1Y3RvciIsImxpc3QiLCJ1bml0UG9vbCIsIm9kZHMiLCJ0aWVycyIsImF2YWlsYWJsZVRpZXJzIiwiT2JqZWN0IiwidmFsdWVzIiwiZmlsdGVyIiwidW5pdCIsImluY2x1ZGVzIiwidGllciIsInJhbmRvbVVuaXQiLCJhdmFpbGFibGVVbml0cyIsInRpZXJPZGRzIiwicmFuZG9tVGllciIsInJvbGxUaWVyIiwidGllclVuaXRzIiwicmFuZG9tSW5kZXgiLCJNYXRoIiwiZmxvb3IiLCJsZW5ndGgiLCJyYW5kb20iLCJzaG9wVW5pdEltYWdlIiwiaW1hZ2UiLCJmdWxsIiwiI2F2YWlsYWJsZVRpZXJzIiwiZm9yRWFjaCIsIm9kZCIsImkiLCJwdXNoIiwiI3JvbGxUaWVyIiwicm9sbCIsInR3b0RlY2ltYWxzIiwicmFuZ2VTdGFydCIsInJhbmdlRW5kIiwiI3R3b0RlY2ltYWxzIiwiZGVjaW1hbCIsInJvdW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/units.js\n");

/***/ }),

/***/ "./src/scripts/util/modal.js":
/*!***********************************!*\
  !*** ./src/scripts/util/modal.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Modal {\n  constructor() {}\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Modal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91dGlsL21vZGFsLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxLQUFLLENBQUM7RUFDUkMsV0FBV0EsQ0FBQSxFQUFHLENBRWQ7QUFDSjtBQUVBLCtEQUFlRCxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGZ0c3RhcnVwLy4vc3JjL3NjcmlwdHMvdXRpbC9tb2RhbC5qcz8xN2I5Il0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIE1vZGFsIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTW9kYWw7Il0sIm5hbWVzIjpbIk1vZGFsIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/util/modal.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZnRzdGFydXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	!function() {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = function(queue) {
/******/ 			if(queue && queue.d < 1) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach(function(fn) { fn.r--; });
/******/ 				queue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = function(deps) { return deps.map(function(dep) {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then(function(r) {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, function(e) {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = function(fn) { fn(queue); };
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = function() {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}); };
/******/ 		__webpack_require__.a = function(module, body, hasAwait) {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = -1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise(function(resolve, rej) {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise["catch"](function() {}); };
/******/ 			module.exports = promise;
/******/ 			body(function(deps) {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = function() { return currentDeps.map(function(d) {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}); }
/******/ 				var promise = new Promise(function(resolve) {
/******/ 					fn = function() { resolve(getResult); };
/******/ 					fn.r = 0;
/******/ 					var fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };
/******/ 					currentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });
/******/ 			queue && queue.d < 0 && (queue.d = 0);
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;