/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_units__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/units */ \"./src/scripts/units.js\");\n/* harmony import */ var _scripts_shop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/shop */ \"./src/scripts/shop.js\");\n/* harmony import */ var _scripts_bench__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/bench */ \"./src/scripts/bench.js\");\n\n\n\n\n// Initialize units variable to be assigned to a Units object once champion info is fetched\nlet units;\ntry {\n  const res = await fetch(\"./src/scripts/tft-champion.json\");\n  if (res.ok) {\n    const promise = await res.json();\n    const list = promise.data;\n    units = new _scripts_units__WEBPACK_IMPORTED_MODULE_0__[\"default\"](list); // assign a Units object to units for constructing a Shop object\n  } else {\n    throw res;\n  }\n} catch (err) {\n  console.log(err);\n}\n\n// declare object for the page's body\nconst body = document.querySelector(\"body\");\nbody.style.backgroundImage = \"url(src/styles/pageBackground.jpeg)\";\n\n// declare object for the modal\nconst modal = document.querySelector(\".modal\");\n\n// declare object for the message element\nconst message = document.querySelector(\".message-modal\");\nconst messageText = document.querySelector(\".message\");\nconst restart = document.querySelector(\".restart\");\n\n// declare object for the settings form in the modal\nconst form = document.querySelector(\".settings-form\");\nconst slider = document.querySelector(\"#slider\");\nconst seconds = document.querySelector(\"#seconds\");\nseconds.innerText = slider.value;\n\n// add event listener to seconds element to display real-time selected starting\n// time in form\nslider.addEventListener(\"input\", e => {\n  seconds.innerText = e.target.value;\n  timer.innerText = e.target.value;\n});\n\n// declare a Shop object for tracking level, gold, tier odds, and shop units\nlet shop = new _scripts_shop__WEBPACK_IMPORTED_MODULE_1__[\"default\"](3, 0, 6, units, handleBuyUnit);\n\n// declare a Bench object for tracking units that have been purchased\nlet bench = new _scripts_bench__WEBPACK_IMPORTED_MODULE_2__[\"default\"](modal, message, messageText);\n\n// declare objects for the top section, which contains the title, timer,\n// nav links, and settings\nconst title = document.createElement(\"div\");\nconst timer = document.createElement(\"div\");\nconst navLinks = document.createElement(\"div\");\nconst settings = document.createElement(\"div\");\nconst settingsIcon = document.createElement(\"img\");\nconst topSection = document.createElement(\"div\");\nconst topRight = document.createElement(\"div\");\n\n// declare objects for the bottom section, which contains the\n// bench and shop\nconst shopEl = document.createElement(\"div\");\nconst bottomSection = document.createElement(\"div\");\n\n// declare objects contained by the shop object, which are the \n// current level, current shop odds, current gold, progress to \n// next level, buy exp button, refresh button, and shop units\nconst level = document.createElement(\"div\");\nconst odds = document.createElement(\"div\");\nconst levelProgress = document.createElement(\"div\");\nconst expButton = document.createElement(\"button\");\nconst refreshButton = document.createElement(\"button\");\nconst levelInfo = document.createElement(\"div\");\nconst shopButtons = document.createElement(\"div\");\nconst shopInterface = document.createElement(\"div\");\n\n// set inner text and classess for top section objects\ntitle.innerText = \"TFT Star Up\";\ntitle.classList.add(\"title\", \"section\");\ntimer.innerText = slider.value;\ntimer.classList.add(\"timer\", \"section\");\nnavLinks.innerText = \"navLinks\";\nsettingsIcon.src = \"src/styles/gear.png\";\nsettingsIcon.classList.add(\"settings-icon\");\nsettings.append(settingsIcon);\nsettings.classList.add(\"settings\");\ntopRight.append(navLinks, settings);\ntopRight.classList.add(\"top-right\", \"section\");\ntopSection.classList.add(\"top\");\ntopSection.append(title, timer, topRight);\n\n// set inner text and classess for bottom section objects\nshopEl.classList.add(\"shop\", \"section\");\nbottomSection.classList.add(\"bottom\");\nbottomSection.append(bench.benchEl, shopEl);\n\n// set inner text and clases for shop objects\nlevel.innerText = shop.level;\nlevel.classList.add(\"section\");\n\n// odds.innerText = `${Shop.tierOdds[shop.level]}`;\n_scripts_shop__WEBPACK_IMPORTED_MODULE_1__[\"default\"].generateTierEls(odds, shop.level);\nodds.classList.add(\"odds\");\nlevelProgress.innerText = `${shop.currentEpx}/${shop.expToNextLevel}`;\nlevelProgress.classList.add(\"section\");\nlevelInfo.classList.add(\"section\", \"shop-level-info\");\nlevelInfo.append(level, levelProgress, odds);\nexpButton.innerText = \"Buy XP\";\nexpButton.classList.add(\"section\", \"exp-button\");\nrefreshButton.innerText = \"Refresh\";\nrefreshButton.classList.add(\"section\", \"refresh-button\");\nshopButtons.classList.add(\"shop-buttons\");\nshopButtons.append(expButton, refreshButton);\n\n// shop.refresh();\n\nshopInterface.classList.add(\"shop-interface\", \"section\");\nshopInterface.append(shopButtons, shop.shopUnitsEl);\nshopEl.append(levelInfo, shopInterface);\n\n// add event listener for opening modal\nsettingsIcon.addEventListener(\"click\", e => {\n  handleOpenModal(e);\n});\n\n// add event listener to button for shop refreshes\nrefreshButton.addEventListener(\"click\", e => {\n  handleRefresh(e);\n});\n\n// add event listener to button for buying experience\nexpButton.addEventListener(\"click\", e => {\n  handleBuyExp(e);\n});\n\n// add event listener to document to track mouse position for\n// for selling bench units\ndocument.addEventListener(\"mousemove\", e => {\n  window.mouse = [e.clientX, e.clientY];\n});\n\n// add event listener to document to conditionally sell a bench\n// unit if the mouse position is on one\ndocument.addEventListener(\"keydown\", e => {\n  if (e.code === \"KeyE\") handleSellUnit(e);\n});\n\n// add event listener to form to close the modal and start the app\nform.addEventListener(\"submit\", e => {\n  handleStartApp(e);\n});\n\n// add event listener to restart button to reopen the welcome modal\nrestart.addEventListener(\"click\", e => {\n  handleOpenModal(e);\n});\n\n// function to handle events that trigger shop refreshes\nfunction handleRefresh(event) {\n  event.preventDefault();\n  shop.refresh();\n}\n\n// function to handle events that trigger buying experience\nfunction handleBuyExp(event) {\n  event.preventDefault();\n  shop.buyExp();\n  if (shop.level < 9) {\n    levelProgress.innerText = `${shop.currentEpx}/${shop.expToNextLevel}`;\n  } else {\n    levelProgress.innerText = shop.expToNextLevel;\n  }\n  level.innerText = shop.level;\n  _scripts_shop__WEBPACK_IMPORTED_MODULE_1__[\"default\"].generateTierEls(odds, shop.level);\n}\n\n// function to handle events that trigger unit purchases; event\n// listener added to return value of shop.generateShopUnits() with \n// this function in shop.js\nfunction handleBuyUnit(event) {\n  event.preventDefault();\n  const unitName = event.target.dataset.unitName;\n  const slotKey = event.target.dataset.slotKey;\n  if (unitName && slotKey) {\n    // unit to sell is at the position contained by the 4th index\n    // of the slotKey data attribute; slotkey = `slot${slotIndex}`\n    const slotIndex = Number(slotKey[4]) - 1;\n    if (bench.buyUnit(unitName)) shop.buyUnit(slotIndex);\n  }\n  ;\n}\n\n// function to handle events that trigger selling of units\nfunction handleSellUnit(event) {\n  event.preventDefault();\n  const hoverElement = document.elementFromPoint(window.mouse[0], window.mouse[1]);\n  const unitName = hoverElement.dataset.unitName;\n  const slotKey = hoverElement.dataset.slotKey;\n  // shop units also have the above data addtributes, so the onBench \n  // one is added to bench units prevent errors from trying to sell shop units\n  const onBench = hoverElement.dataset.onBench;\n  if (unitName && slotKey && onBench === \"true\") {\n    // unit to sell is at the position contained by the 4th index\n    // of the slotKey data attribute; slotkey = `slot${slotIndex}`\n    const slotIndex = Number(slotKey[4]) - 1;\n    bench.removeUnit(slotIndex);\n  }\n}\n\n// function to handle events that trigger opening the modal\nfunction handleOpenModal(event) {\n  event.preventDefault();\n  body.removeEventListener(\"keydown\", refreshHotkey);\n  body.removeEventListener(\"keydown\", buyExpHotkey);\n  timer.innerText = slider.value;\n  modal.classList.remove(\"hidden\");\n  modal.children[0].classList.remove(\"hidden\");\n  message.classList.add(\"hidden\");\n  message.innerText = \"\";\n  restart.classList.add(\"hidden\");\n  clearInterval(time);\n}\n\n// function to handle events that trigger starting the app\nfunction handleStartApp(event) {\n  event.preventDefault();\n  modal.classList.toggle(\"hidden\");\n  bench.reset();\n  bottomSection.replaceChild(bench.benchEl, bottomSection.children[0]);\n  shop.reset();\n  level.innerText = shop.level;\n  _scripts_shop__WEBPACK_IMPORTED_MODULE_1__[\"default\"].generateTierEls(odds, shop.level);\n  levelProgress.innerText = `${shop.currentEpx}/${shop.expToNextLevel}`;\n  startRolldown();\n}\nfunction refreshHotkey(event) {\n  if (event.code === \"KeyD\") handleRefresh(event);\n}\nfunction buyExpHotkey(event) {\n  if (event.code === \"KeyF\") handleBuyExp(event);\n}\n\n// initialize time variable to count down seconds once a rolldown starts\nlet time;\n\n// function to begin timer countdown\nfunction startRolldown() {\n  // enable hot keys for shop refreshes and buying experience\n  body.addEventListener(\"keydown\", refreshHotkey);\n  body.addEventListener(\"keydown\", buyExpHotkey);\n  time = setInterval(() => {\n    if (timer.innerText > 0) {\n      timer.innerText = Number(timer.innerText) - 1;\n    } else {\n      stopRolldown();\n    }\n  }, 1000);\n}\n\n// function to end timer countdown\nfunction stopRolldown() {\n  // disable hot keys for shop refreshes and buying experience\n  clearInterval(time);\n  body.removeEventListener(\"keydown\", refreshHotkey);\n  body.removeEventListener(\"keydown\", buyExpHotkey);\n  modal.classList.remove(\"hidden\");\n  modal.children[0].classList.add(\"hidden\");\n  message.classList.remove(\"hidden\", \"error\");\n  messageText.innerText = \"Thanks for rolling down!  To start another, click the button below.\";\n  restart.classList.remove(\"hidden\");\n}\nbody.append(topSection, bottomSection);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/bench.js":
/*!******************************!*\
  !*** ./src/scripts/bench.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst dataDragonUrl = \"https://ddragon.leagueoflegends.com/cdn/\";\nclass Bench {\n  constructor(modal, messageModal, messageText) {\n    this.slots = this.#emptyBench(); // units currently on the bench\n    this.benchEl = this.#generateBench(this.slots); // bench element in DOM\n    // units' slot indices organized by unit star level\n    // - key: unit name plus star level suffix (1,2,3); e.g., \"Graves1\" != \"Graves2\"\n    // - value: array of slot indices; key is deleted if array is empty\n    this.units = {};\n    this.modal = modal;\n    this.messageModal = messageModal;\n    this.messageText = messageText;\n  }\n  buyUnit(unitName) {\n    let slotIndex = 0;\n    while (slotIndex < 9 && this.benchEl.children[slotIndex].children.length != 0) slotIndex++;\n    unitName = this.#imageNameReformat(unitName);\n    const slotKey = `slot${slotIndex + 1}`;\n    const oneStarKey = `${unitName}1`;\n    if (slotIndex < 9) {\n      let slot;\n      if (!this.#hasCopy(oneStarKey)) {\n        // create index array for the unit at a one-star in units object\n        slot = this.#generateSlot(slotKey, unitName);\n        this.units[oneStarKey] = [slotIndex];\n        this.slots[slotKey] = oneStarKey;\n        this.benchEl.replaceChild(slot, this.benchEl.children[slotIndex]);\n      } else {\n        if (this.#canStarUp(oneStarKey)) {\n          this.#starUpUnit(unitName, oneStarKey);\n        } else {\n          // add index to unit's index array in units object\n          this.units[oneStarKey].push(slotIndex);\n          slot = this.#generateSlot(slotKey, unitName);\n          this.slots[slotKey] = oneStarKey;\n          this.benchEl.replaceChild(slot, this.benchEl.children[slotIndex]);\n        }\n      }\n      return true;\n    } else {\n      // specific scenario where the bench is full but has two copies of the unit being\n      // bought; the unit being bought is allowed to \n      if (this.#canStarUp(oneStarKey)) {\n        this.#starUpUnit(unitName, oneStarKey);\n        return true;\n      } else {\n        this.modal.classList.remove(\"hidden\");\n        this.modal.children[0].classList.add(\"hidden\");\n        this.messageModal.classList.remove(\"hidden\");\n        this.messageModal.classList.toggle(\"error\");\n        this.messageText.innerText = \"The bench is full.  Sell units to free up bench space.\";\n        let error = setInterval(() => {\n          this.modal.classList.add(\"hidden\");\n          this.messageModal.classList.add(\"hidden\");\n          this.messageText.innerText = \"\";\n          this.messageModal.classList.toggle(\"error\");\n          clearInterval(error);\n        }, 1000);\n      }\n    }\n    return false;\n  }\n  benchUnitImage(unitName) {\n    if (unitName === \"Silco\") {\n      // Silco has no champion icon as he is a TFT-specific unit; using the TFT picture as the bench image\n      return `${dataDragonUrl}13.18.1/img/tft-champion/TFT9_Silco.TFT_Set9_Stage2.png`;\n    } else if (unitName === \"Ksante\") {\n      // K'Sante's tile image does not follow the general Void name reformatting\n      return `${dataDragonUrl}img/champion/tiles/KSante_0.jpg`;\n    } else if (unitName === \"Reksai\") {\n      // Rek'sai's tile image does not follow the general Void name reformatting\n      return `${dataDragonUrl}img/champion/tiles/RekSai_0.jpg`;\n    } else {\n      // standard unit tile image retrieval\n      return `${dataDragonUrl}img/champion/tiles/${unitName}_0.jpg`;\n    }\n  }\n  removeUnit(slotIndex) {\n    // free up the slot in this.slots at slotIndex\n    const slotKey = `slot${slotIndex + 1}`;\n    const unitKey = this.slots[slotKey];\n    this.slots[slotKey] = \"empty\";\n\n    // if the indices array for unitKey in this.units contains slotIndex:\n    // - remove it from the array\n    this.units[unitKey] = this.units[unitKey].filter(index => index != slotIndex);\n\n    // if the indices array for unitKey in this.units is empty\n    // - delete unitKey from this.units\n    if (this.units[unitKey].length < 1) delete this.units[unitKey];\n\n    // generate empty slot element and replace the previous one at slotIndex in this.benchEl\n    const emptySlot = this.#generateSlot(slotKey, \"empty\");\n    this.benchEl.replaceChild(emptySlot, this.benchEl.children[slotIndex]);\n  }\n  reset() {\n    this.slots = this.#emptyBench();\n    this.benchEl = this.#generateBench(this.slots);\n    this.units = {};\n  }\n\n  // private function only invoked by constructor\n  #generateBench() {\n    let benchSlots = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (Object.keys(benchSlots).length != 9) benchSlots = this.#emptyBench();\n    const bench = document.createElement(\"div\");\n    bench.classList.add(\"bench\", \"section\");\n    Object.entries(benchSlots).forEach(_ref => {\n      let [slotKey, slotValue] = _ref;\n      bench.append(this.#generateSlot(slotKey, slotValue));\n    });\n    return bench;\n  }\n\n  // private function invoked by buyUnit, removeUnit, and #generateBench\n  #generateSlot(slotKey, unitName) {\n    const slotEl = document.createElement(\"div\");\n    slotEl.classList.add(\"slot\");\n    if (unitName === \"empty\") {\n      slotEl.classList.toggle(\"empty-bench-slot\");\n    } else {\n      slotEl.classList.toggle(\"one-star\");\n      const unitIcon = document.createElement(\"img\");\n      unitIcon.dataset.slotKey = slotKey;\n      unitIcon.dataset.unitName = unitName;\n      unitIcon.dataset.onBench = \"true\";\n      unitIcon.src = this.benchUnitImage(unitName);\n      slotEl.append(unitIcon);\n    }\n    return slotEl;\n  }\n\n  // private function invoked by the constructor or if no argument is passed to #generateBench\n  #emptyBench() {\n    const slots = {};\n    for (let i = 1; i <= 9; i++) {\n      slots[`slot${i}`] = \"empty\";\n    }\n    return slots;\n  }\n\n  // private function only invoked in buyUnit if unitName has an apostrophe\n  #imageNameReformat(unitName) {\n    if (unitName.includes(\"'\")) {\n      // reformat Void unit names (character after apostrophe is lowercase)\n      const nameParts = unitName.split(\"'\");\n      unitName = nameParts[0] + nameParts[1].toLowerCase();\n    } else if (unitName.includes(\" \")) {\n      // reformat unit name to have no spaces\n      unitName = unitName.split(\" \").join(\"\");\n    }\n    return unitName;\n  }\n\n  // private functions only invoked by buyUnit to appropriately update \n  // this.slots, this.benchEl, and this.units based on units' star levels\n  #hasCopy(unitKey) {\n    return Object.keys(this.units).includes(unitKey);\n  }\n  #canStarUp(unitKey) {\n    if (Object.keys(this.units).includes(unitKey)) return this.units[unitKey].length === 2;\n    return false;\n  }\n  #canThreeStar(unitKey) {\n    return this.units[unitKey].length === 3;\n  }\n  #addTwoStarUnit(unitName, oneStarKey) {\n    // star up first copy of unit and remove the second one from the bench\n    const firstCopyIndex = this.units[oneStarKey].sort()[0];\n    const firstCopySlotKey = `slot${firstCopyIndex + 1}`;\n    const twoStarKey = `${unitName}2`;\n    // remove the two one-starred units at their indices\n    this.units[oneStarKey].sort().forEach(index => {\n      this.removeUnit(index);\n    });\n    if (!this.#hasCopy(twoStarKey)) {\n      this.units[twoStarKey] = [firstCopyIndex];\n    } else {\n      this.units[twoStarKey].push(firstCopyIndex);\n    }\n    this.slots[firstCopySlotKey] = twoStarKey;\n    const slot = this.#generateSlot(firstCopySlotKey, unitName);\n    slot.classList.toggle(\"two-star\");\n    slot.classList.toggle(\"one-star\");\n    this.benchEl.replaceChild(slot, this.benchEl.children[firstCopyIndex]);\n  }\n  #addThreeStarUnit(unitName, twoStarKey) {\n    // star up first copy of unit and remove the second one from the bench\n    const firstCopyIndex = this.units[twoStarKey].sort()[0];\n    const firstCopySlotKey = `slot${firstCopyIndex + 1}`;\n    const threeStarKey = `${unitName}3`;\n    // remove the two two-starred units at their indices\n    this.units[twoStarKey].sort().forEach(index => {\n      this.removeUnit(index);\n    });\n    if (!this.#hasCopy(threeStarKey)) {\n      this.units[threeStarKey] = [firstCopyIndex];\n    } else {\n      this.units[threeStarKey].push(firstCopyIndex);\n    }\n    this.slots[firstCopySlotKey] = threeStarKey;\n    const slot = this.#generateSlot(firstCopySlotKey, unitName);\n    slot.classList.remove(\"one-star\", \"two-star\");\n    slot.classList.add(\"three-star\");\n    this.benchEl.replaceChild(slot, this.benchEl.children[firstCopyIndex]);\n  }\n  #starUpUnit(unitName, oneStarKey) {\n    this.#addTwoStarUnit(unitName, oneStarKey);\n    const twoStarKey = `${unitName}2`;\n    if (this.#canThreeStar(twoStarKey)) {\n      this.#addThreeStarUnit(unitName, twoStarKey);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bench);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/bench.js\n");

/***/ }),

/***/ "./src/scripts/shop.js":
/*!*****************************!*\
  !*** ./src/scripts/shop.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Shop {\n  constructor() {\n    let startingLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n    let currentEpx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let expToNextLevel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;\n    let units = arguments.length > 3 ? arguments[3] : undefined;\n    let handleBuyUnit = arguments.length > 4 ? arguments[4] : undefined;\n    this.level = startingLevel;\n    this.currentEpx = currentEpx;\n    this.expToNextLevel = expToNextLevel;\n    this.units = units;\n    this.unitPool = this.units.unitPool(Shop.tierOdds[this.level]); // an array of unit info objects\n    this.slots = this.emptyShop();\n    this.handleBuyUnit = handleBuyUnit; // event function to pass bought unit to bench\n    this.shopUnitsEl = this.generateShopUnits(this.slots);\n  }\n  buyExp() {\n    if (this.level < 9) {\n      this.currentEpx += 4;\n      if (this.currentEpx >= this.expToNextLevel) this.levelUp();\n    }\n  }\n  levelUp() {\n    this.level++;\n    this.currentEpx = this.currentEpx - this.expToNextLevel;\n    this.expToNextLevel = Shop.levelExp[this.level];\n    this.unitPool = this.units.unitPool(Shop.tierOdds[this.level]);\n  }\n  buyUnit(slotIndex) {\n    // free up the slot in this.slots at slotIndex\n    const slotKey = `slot${slotIndex + 1}`;\n    this.slots[slotKey] = \"empty\";\n    const emptySlot = this.#generateSlot(slotKey, \"empty\");\n    this.shopUnitsEl.replaceChild(emptySlot, this.shopUnitsEl.children[slotIndex]);\n  }\n  refresh() {\n    Object.keys(this.slots).forEach((key, i) => {\n      this.slots[key] = this.units.randomUnit(this.unitPool, Shop.tierOdds[this.level]);\n      const newUnit = this.#generateSlot(key, this.slots[key]);\n      this.shopUnitsEl.replaceChild(newUnit, this.shopUnitsEl.children[i]);\n    });\n  }\n  generateShopUnits() {\n    let shopSlots = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const shopUnits = document.createElement(\"div\");\n    shopUnits.classList.add(\"section\", \"shop-units\");\n    Object.entries(shopSlots).forEach(_ref => {\n      let [slotKey, slot] = _ref;\n      const slotEl = this.#generateSlot(slotKey, slot);\n      shopUnits.append(slotEl);\n    });\n    // add event listener for buying units \n    shopUnits.addEventListener(\"click\", e => this.handleBuyUnit(e));\n    return shopUnits;\n  }\n  reset() {\n    this.level = 3;\n    this.currentEpx = 0;\n    this.expToNextLevel = 6;\n    this.unitPool = this.units.unitPool(Shop.tierOdds[this.level]);\n    this.slots = this.emptyShop();\n    this.refresh();\n  }\n  emptyShop() {\n    const slots = {};\n    for (let i = 1; i <= 5; i++) {\n      slots[`slot${i}`] = \"empty\";\n    }\n    return slots;\n  }\n  #generateSlot(slotKey) {\n    let unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"empty\";\n    const slotEl = document.createElement(\"div\");\n    if (unit === \"empty\") {\n      this.slots[slotKey] = \"empty\";\n      slotEl.classList.add(\"empty\", \"shop-unit\", \"empty-shop-slot\");\n    } else {\n      const icon = document.createElement(\"img\");\n      const name = document.createElement(\"div\");\n      icon.src = this.units.shopUnitImage(unit);\n      name.innerText = unit.name;\n      name.classList.add(\"shop-unit-name\");\n      slotEl.append(icon, name);\n      slotEl.classList.add(\"section\", \"shop-unit\", `tier-${unit.tier}`);\n      // add unit name as data attribute for populating bench spaces with correct unit icon\n      for (const child of slotEl.children) {\n        child.dataset.unitName = unit.name;\n        child.dataset.slotKey = slotKey;\n      }\n    }\n    return slotEl;\n  }\n}\nShop.tierOdds = {\n  1: [1.00, 0.00, 0.00, 0.00, 0.00],\n  2: [1.00, 0.00, 0.00, 0.00, 0.00],\n  3: [0.75, 0.25, 0.00, 0.00, 0.00],\n  4: [0.55, 0.30, 0.15, 0.00, 0.00],\n  5: [0.45, 0.33, 0.20, 0.02, 0.00],\n  6: [0.25, 0.40, 0.30, 0.05, 0.00],\n  7: [0.19, 0.30, 0.35, 0.25, 0.01],\n  8: [0.16, 0.20, 0.35, 0.25, 0.04],\n  9: [0.09, 0.15, 0.30, 0.30, 0.16]\n};\nShop.generateTierEls = function (parentEl, level) {\n  if (parentEl.children.length === 0) {\n    Shop.tierOdds[level].forEach((odd, i) => {\n      const tierEl = document.createElement(\"p\");\n      tierEl.classList.add(`tier-${i + 1}-odd`);\n      tierEl.innerText = `${(odd * 100).toFixed(0)}%`;\n      parentEl.append(tierEl);\n    });\n  } else {\n    Shop.tierOdds[level].forEach((odd, i) => {\n      parentEl.children[i].innerText = `${(odd * 100).toFixed(0)}%`;\n    });\n  }\n};\nShop.levelExp = {\n  2: 2,\n  3: 6,\n  4: 10,\n  5: 24,\n  6: 40,\n  7: 60,\n  8: 84,\n  9: \"MAX\"\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Shop);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQ0YsS0FBSyxDQUFDLENBQUNvQixPQUFPLENBQUMsQ0FBQ2dDLEdBQUcsRUFBRTlCLENBQUMsS0FBSztNQUNyQzZCLFFBQVEsQ0FBQ25DLFFBQVEsQ0FBQ00sQ0FBQyxDQUFDLENBQUN1QixTQUFTLEdBQUksR0FBRSxDQUFDTyxHQUFHLEdBQUcsR0FBRyxFQUFFRSxPQUFPLENBQUMsQ0FBQyxDQUFFLEdBQUU7SUFDakUsQ0FBQyxDQUFDO0VBQ047QUFDSixDQUFDO0FBRURoRSxJQUFJLENBQUNtQixRQUFRLEdBQUc7RUFDWixDQUFDLEVBQUUsQ0FBQztFQUNKLENBQUMsRUFBRSxDQUFDO0VBQ0osQ0FBQyxFQUFFLEVBQUU7RUFDTCxDQUFDLEVBQUUsRUFBRTtFQUNMLENBQUMsRUFBRSxFQUFFO0VBQ0wsQ0FBQyxFQUFFLEVBQUU7RUFDTCxDQUFDLEVBQUUsRUFBRTtFQUNMLENBQUMsRUFBRTtBQUNQLENBQUM7QUFFRCwrREFBZW5CLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZnRzdGFydXAvLi9zcmMvc2NyaXB0cy9zaG9wLmpzP2JiOTIiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU2hvcCB7XG4gICAgY29uc3RydWN0b3Ioc3RhcnRpbmdMZXZlbCA9IDMsIGN1cnJlbnRFcHggPSAwLCBleHBUb05leHRMZXZlbCA9IDYsIHVuaXRzLCBoYW5kbGVCdXlVbml0KSB7XG4gICAgICAgIHRoaXMubGV2ZWwgPSBzdGFydGluZ0xldmVsO1xuICAgICAgICB0aGlzLmN1cnJlbnRFcHggPSBjdXJyZW50RXB4O1xuICAgICAgICB0aGlzLmV4cFRvTmV4dExldmVsID0gZXhwVG9OZXh0TGV2ZWw7XG4gICAgICAgIHRoaXMudW5pdHMgPSB1bml0cztcbiAgICAgICAgdGhpcy51bml0UG9vbCA9IHRoaXMudW5pdHMudW5pdFBvb2woU2hvcC50aWVyT2Rkc1t0aGlzLmxldmVsXSk7IC8vIGFuIGFycmF5IG9mIHVuaXQgaW5mbyBvYmplY3RzXG4gICAgICAgIHRoaXMuc2xvdHMgPSB0aGlzLmVtcHR5U2hvcCgpO1xuICAgICAgICB0aGlzLmhhbmRsZUJ1eVVuaXQgPSBoYW5kbGVCdXlVbml0OyAvLyBldmVudCBmdW5jdGlvbiB0byBwYXNzIGJvdWdodCB1bml0IHRvIGJlbmNoXG4gICAgICAgIHRoaXMuc2hvcFVuaXRzRWwgPSB0aGlzLmdlbmVyYXRlU2hvcFVuaXRzKHRoaXMuc2xvdHMpO1xuICAgIH1cblxuICAgIGJ1eUV4cCgpIHtcbiAgICAgICAgaWYgKHRoaXMubGV2ZWwgPCA5KSB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRFcHggKz0gNDtcbiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRFcHggPj0gdGhpcy5leHBUb05leHRMZXZlbCkgdGhpcy5sZXZlbFVwKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgbGV2ZWxVcCgpIHtcbiAgICAgICAgdGhpcy5sZXZlbCsrO1xuICAgICAgICB0aGlzLmN1cnJlbnRFcHggPSB0aGlzLmN1cnJlbnRFcHggLSB0aGlzLmV4cFRvTmV4dExldmVsO1xuICAgICAgICB0aGlzLmV4cFRvTmV4dExldmVsID0gU2hvcC5sZXZlbEV4cFt0aGlzLmxldmVsXTtcbiAgICAgICAgdGhpcy51bml0UG9vbCA9IHRoaXMudW5pdHMudW5pdFBvb2woU2hvcC50aWVyT2Rkc1t0aGlzLmxldmVsXSk7XG4gICAgfVxuXG4gICAgYnV5VW5pdChzbG90SW5kZXgpIHtcbiAgICAgICAgLy8gZnJlZSB1cCB0aGUgc2xvdCBpbiB0aGlzLnNsb3RzIGF0IHNsb3RJbmRleFxuICAgICAgICBjb25zdCBzbG90S2V5ID0gYHNsb3Qke3Nsb3RJbmRleCArIDF9YDtcbiAgICAgICAgdGhpcy5zbG90c1tzbG90S2V5XSA9IFwiZW1wdHlcIjtcbiAgICAgICAgY29uc3QgZW1wdHlTbG90ID0gdGhpcy4jZ2VuZXJhdGVTbG90KHNsb3RLZXksIFwiZW1wdHlcIik7XG4gICAgICAgIHRoaXMuc2hvcFVuaXRzRWwucmVwbGFjZUNoaWxkKGVtcHR5U2xvdCwgdGhpcy5zaG9wVW5pdHNFbC5jaGlsZHJlbltzbG90SW5kZXhdKTtcbiAgICB9XG5cbiAgICByZWZyZXNoKCkge1xuICAgICAgICBPYmplY3Qua2V5cyh0aGlzLnNsb3RzKS5mb3JFYWNoKChrZXksIGkpPT4ge1xuICAgICAgICAgICAgdGhpcy5zbG90c1trZXldID0gdGhpcy51bml0cy5yYW5kb21Vbml0KHRoaXMudW5pdFBvb2wsIFNob3AudGllck9kZHNbdGhpcy5sZXZlbF0pO1xuICAgICAgICAgICAgY29uc3QgbmV3VW5pdCA9IHRoaXMuI2dlbmVyYXRlU2xvdChrZXksIHRoaXMuc2xvdHNba2V5XSk7XG4gICAgICAgICAgICB0aGlzLnNob3BVbml0c0VsLnJlcGxhY2VDaGlsZChuZXdVbml0LCB0aGlzLnNob3BVbml0c0VsLmNoaWxkcmVuW2ldKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZ2VuZXJhdGVTaG9wVW5pdHMoc2hvcFNsb3RzID0ge30pIHtcbiAgICAgICAgY29uc3Qgc2hvcFVuaXRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgc2hvcFVuaXRzLmNsYXNzTGlzdC5hZGQoXCJzZWN0aW9uXCIsIFwic2hvcC11bml0c1wiKTtcbiAgICAgICAgT2JqZWN0LmVudHJpZXMoc2hvcFNsb3RzKS5mb3JFYWNoKChbc2xvdEtleSwgc2xvdF0gKT0+IHtcbiAgICAgICAgICAgIGNvbnN0IHNsb3RFbCA9IHRoaXMuI2dlbmVyYXRlU2xvdChzbG90S2V5LCBzbG90KTtcbiAgICAgICAgICAgIHNob3BVbml0cy5hcHBlbmQoc2xvdEVsKTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGFkZCBldmVudCBsaXN0ZW5lciBmb3IgYnV5aW5nIHVuaXRzIFxuICAgICAgICBzaG9wVW5pdHMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4gdGhpcy5oYW5kbGVCdXlVbml0KGUpKTtcbiAgICAgICAgcmV0dXJuIHNob3BVbml0cztcbiAgICB9XG5cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5sZXZlbCA9IDM7XG4gICAgICAgIHRoaXMuY3VycmVudEVweCA9IDA7XG4gICAgICAgIHRoaXMuZXhwVG9OZXh0TGV2ZWwgPSA2O1xuICAgICAgICB0aGlzLnVuaXRQb29sID0gdGhpcy51bml0cy51bml0UG9vbChTaG9wLnRpZXJPZGRzW3RoaXMubGV2ZWxdKTtcbiAgICAgICAgdGhpcy5zbG90cyA9IHRoaXMuZW1wdHlTaG9wKCk7XG4gICAgICAgIHRoaXMucmVmcmVzaCgpO1xuICAgIH1cblxuICAgIGVtcHR5U2hvcCgpIHtcbiAgICAgICAgY29uc3Qgc2xvdHMgPSB7fTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNSA7IGkrKykge1xuICAgICAgICAgICAgc2xvdHNbYHNsb3Qke2l9YF0gPSBcImVtcHR5XCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNsb3RzO1xuICAgIH1cblxuICAgICNnZW5lcmF0ZVNsb3Qoc2xvdEtleSwgdW5pdCA9IFwiZW1wdHlcIikge1xuICAgICAgICBjb25zdCBzbG90RWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBpZiAodW5pdCA9PT0gXCJlbXB0eVwiKSB7XG4gICAgICAgICAgICB0aGlzLnNsb3RzW3Nsb3RLZXldID0gXCJlbXB0eVwiO1xuICAgICAgICAgICAgc2xvdEVsLmNsYXNzTGlzdC5hZGQoXCJlbXB0eVwiLCBcInNob3AtdW5pdFwiLCBcImVtcHR5LXNob3Atc2xvdFwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBpY29uLnNyYyA9IHRoaXMudW5pdHMuc2hvcFVuaXRJbWFnZSh1bml0KTtcbiAgICAgICAgICAgIG5hbWUuaW5uZXJUZXh0ID0gdW5pdC5uYW1lO1xuICAgICAgICAgICAgbmFtZS5jbGFzc0xpc3QuYWRkKFwic2hvcC11bml0LW5hbWVcIik7XG4gICAgICAgICAgICBzbG90RWwuYXBwZW5kKGljb24sIG5hbWUpO1xuICAgICAgICAgICAgc2xvdEVsLmNsYXNzTGlzdC5hZGQoXCJzZWN0aW9uXCIsIFwic2hvcC11bml0XCIsIGB0aWVyLSR7dW5pdC50aWVyfWApO1xuICAgICAgICAgICAgLy8gYWRkIHVuaXQgbmFtZSBhcyBkYXRhIGF0dHJpYnV0ZSBmb3IgcG9wdWxhdGluZyBiZW5jaCBzcGFjZXMgd2l0aCBjb3JyZWN0IHVuaXQgaWNvblxuICAgICAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBzbG90RWwuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICBjaGlsZC5kYXRhc2V0LnVuaXROYW1lID0gdW5pdC5uYW1lO1xuICAgICAgICAgICAgICAgIGNoaWxkLmRhdGFzZXQuc2xvdEtleSA9IHNsb3RLZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNsb3RFbDtcbiAgICB9XG59XG5cblNob3AudGllck9kZHMgPSB7XG4gICAgMTogWzEuMDAsIDAuMDAsIDAuMDAsIDAuMDAsIDAuMDBdLFxuICAgIDI6IFsxLjAwLCAwLjAwLCAwLjAwLCAwLjAwLCAwLjAwXSxcbiAgICAzOiBbMC43NSwgMC4yNSwgMC4wMCwgMC4wMCwgMC4wMF0sXG4gICAgNDogWzAuNTUsIDAuMzAsIDAuMTUsIDAuMDAsIDAuMDBdLFxuICAgIDU6IFswLjQ1LCAwLjMzLCAwLjIwLCAwLjAyLCAwLjAwXSxcbiAgICA2OiBbMC4yNSwgMC40MCwgMC4zMCwgMC4wNSwgMC4wMF0sXG4gICAgNzogWzAuMTksIDAuMzAsIDAuMzUsIDAuMjUsIDAuMDFdLFxuICAgIDg6IFswLjE2LCAwLjIwLCAwLjM1LCAwLjI1LCAwLjA0XSxcbiAgICA5OiBbMC4wOSwgMC4xNSwgMC4zMCwgMC4zMCwgMC4xNl0sXG59XG5cblNob3AuZ2VuZXJhdGVUaWVyRWxzID0gZnVuY3Rpb24ocGFyZW50RWwsIGxldmVsKSB7XG4gICAgaWYgKHBhcmVudEVsLmNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBTaG9wLnRpZXJPZGRzW2xldmVsXS5mb3JFYWNoKChvZGQsIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRpZXJFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICAgICAgdGllckVsLmNsYXNzTGlzdC5hZGQoYHRpZXItJHtpICsgMX0tb2RkYCk7XG4gICAgICAgICAgICB0aWVyRWwuaW5uZXJUZXh0ID1gJHsob2RkICogMTAwKS50b0ZpeGVkKDApfSVgO1xuICAgICAgICAgICAgcGFyZW50RWwuYXBwZW5kKHRpZXJFbCk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIFNob3AudGllck9kZHNbbGV2ZWxdLmZvckVhY2goKG9kZCwgaSkgPT4ge1xuICAgICAgICAgICAgcGFyZW50RWwuY2hpbGRyZW5baV0uaW5uZXJUZXh0ID0gYCR7KG9kZCAqIDEwMCkudG9GaXhlZCgwKX0lYDtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5TaG9wLmxldmVsRXhwID0ge1xuICAgIDI6IDIsXG4gICAgMzogNixcbiAgICA0OiAxMCxcbiAgICA1OiAyNCxcbiAgICA2OiA0MCxcbiAgICA3OiA2MCxcbiAgICA4OiA4NCxcbiAgICA5OiBcIk1BWFwiXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTaG9wOyJdLCJuYW1lcyI6WyJTaG9wIiwiY29uc3RydWN0b3IiLCJzdGFydGluZ0xldmVsIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiY3VycmVudEVweCIsImV4cFRvTmV4dExldmVsIiwidW5pdHMiLCJoYW5kbGVCdXlVbml0IiwibGV2ZWwiLCJ1bml0UG9vbCIsInRpZXJPZGRzIiwic2xvdHMiLCJlbXB0eVNob3AiLCJzaG9wVW5pdHNFbCIsImdlbmVyYXRlU2hvcFVuaXRzIiwiYnV5RXhwIiwibGV2ZWxVcCIsImxldmVsRXhwIiwiYnV5VW5pdCIsInNsb3RJbmRleCIsInNsb3RLZXkiLCJlbXB0eVNsb3QiLCJnZW5lcmF0ZVNsb3QiLCJyZXBsYWNlQ2hpbGQiLCJjaGlsZHJlbiIsInJlZnJlc2giLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImkiLCJyYW5kb21Vbml0IiwibmV3VW5pdCIsInNob3BTbG90cyIsInNob3BVbml0cyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImVudHJpZXMiLCJfcmVmIiwic2xvdCIsInNsb3RFbCIsImFwcGVuZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicmVzZXQiLCIjZ2VuZXJhdGVTbG90IiwidW5pdCIsImljb24iLCJuYW1lIiwic3JjIiwic2hvcFVuaXRJbWFnZSIsImlubmVyVGV4dCIsInRpZXIiLCJjaGlsZCIsImRhdGFzZXQiLCJ1bml0TmFtZSIsImdlbmVyYXRlVGllckVscyIsInBhcmVudEVsIiwib2RkIiwidGllckVsIiwidG9GaXhlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/shop.js\n");

/***/ }),

/***/ "./src/scripts/units.js":
/*!******************************!*\
  !*** ./src/scripts/units.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst dataDragonUrl = \"https://ddragon.leagueoflegends.com/cdn/\";\nclass Units {\n  constructor(list) {\n    this.list = list;\n  }\n  unitPool(odds) {\n    const tiers = this.#availableTiers(odds);\n    return Object.values(this.list).filter(unit => tiers.includes(unit.tier));\n  }\n  randomUnit(availableUnits, tierOdds) {\n    const randomTier = this.#rollTier(tierOdds);\n    const tierUnits = availableUnits.filter(unit => unit.tier == randomTier);\n    const randomIndex = Math.floor(tierUnits.length * Math.random());\n    return tierUnits[randomIndex];\n  }\n  shopUnitImage(unit) {\n    return `${dataDragonUrl}13.18.1/img/tft-champion/${unit.image.full}`;\n  }\n\n  // private function only invoked by unitPool\n  #availableTiers(odds) {\n    const tiers = [];\n    odds.forEach((odd, i) => {\n      if (odd > 0) tiers.push(i + 1);\n    });\n    return tiers;\n  }\n\n  // private function only invoked by randomUnit\n  #rollTier(tierOdds) {\n    const roll = this.#twoDecimals(Math.random());\n    let rangeStart = 0;\n    let rangeEnd = tierOdds[0];\n    for (let i = 1; i <= tierOdds.length; i++) {\n      if (rangeStart < roll && roll <= rangeEnd) {\n        return i;\n      } else {\n        rangeStart = rangeEnd;\n        rangeEnd = this.#twoDecimals(rangeEnd + tierOdds[i]);\n      }\n    }\n  }\n\n  // private function only invoked by #rollTier\n  #twoDecimals(decimal) {\n    return Math.round(decimal * 100) / 100;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Units);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91bml0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsYUFBYSxHQUFHLDBDQUEwQztBQUVoRSxNQUFNQyxLQUFLLENBQUM7RUFDUkMsV0FBV0EsQ0FBQ0MsSUFBSSxFQUFFO0lBQ2QsSUFBSSxDQUFDQSxJQUFJLEdBQUdBLElBQUk7RUFDcEI7RUFFQUMsUUFBUUEsQ0FBQ0MsSUFBSSxFQUFFO0lBQ1gsTUFBTUMsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDQyxjQUFjLENBQUNGLElBQUksQ0FBQztJQUN4QyxPQUFPRyxNQUFNLENBQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUNOLElBQUksQ0FBQyxDQUFDTyxNQUFNLENBQUNDLElBQUksSUFBSUwsS0FBSyxDQUFDTSxRQUFRLENBQUNELElBQUksQ0FBQ0UsSUFBSSxDQUFDLENBQUM7RUFDN0U7RUFFQUMsVUFBVUEsQ0FBQ0MsY0FBYyxFQUFFQyxRQUFRLEVBQUU7SUFDakMsTUFBTUMsVUFBVSxHQUFHLElBQUksQ0FBQyxDQUFDQyxRQUFRLENBQUNGLFFBQVEsQ0FBQztJQUMzQyxNQUFNRyxTQUFTLEdBQUdKLGNBQWMsQ0FBQ0wsTUFBTSxDQUFDQyxJQUFJLElBQUlBLElBQUksQ0FBQ0UsSUFBSSxJQUFJSSxVQUFVLENBQUM7SUFDeEUsTUFBTUcsV0FBVyxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0gsU0FBUyxDQUFDSSxNQUFNLEdBQUdGLElBQUksQ0FBQ0csTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNoRSxPQUFPTCxTQUFTLENBQUNDLFdBQVcsQ0FBQztFQUNqQztFQUVBSyxhQUFhQSxDQUFDZCxJQUFJLEVBQUU7SUFDaEIsT0FBUSxHQUFFWCxhQUFjLDRCQUEyQlcsSUFBSSxDQUFDZSxLQUFLLENBQUNDLElBQUssRUFBQztFQUN4RTs7RUFFQTtFQUNBLENBQUNwQixjQUFjcUIsQ0FBQ3ZCLElBQUksRUFBRTtJQUNsQixNQUFNQyxLQUFLLEdBQUcsRUFBRTtJQUNoQkQsSUFBSSxDQUFDd0IsT0FBTyxDQUFDLENBQUNDLEdBQUcsRUFBRUMsQ0FBQyxLQUFLO01BQ3JCLElBQUlELEdBQUcsR0FBRyxDQUFDLEVBQUV4QixLQUFLLENBQUMwQixJQUFJLENBQUNELENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQyxDQUFDO0lBQ0YsT0FBT3pCLEtBQUs7RUFDaEI7O0VBRUE7RUFDQSxDQUFDWSxRQUFRZSxDQUFDakIsUUFBUSxFQUFFO0lBQ2hCLE1BQU1rQixJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUNDLFdBQVcsQ0FBQ2QsSUFBSSxDQUFDRyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzdDLElBQUlZLFVBQVUsR0FBRyxDQUFDO0lBQ2xCLElBQUlDLFFBQVEsR0FBR3JCLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDMUIsS0FBSyxJQUFJZSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLElBQUlmLFFBQVEsQ0FBQ08sTUFBTSxFQUFFUSxDQUFDLEVBQUUsRUFBRTtNQUN2QyxJQUFJSyxVQUFVLEdBQUdGLElBQUksSUFBSUEsSUFBSSxJQUFJRyxRQUFRLEVBQUU7UUFDdkMsT0FBT04sQ0FBQztNQUNaLENBQUMsTUFBTTtRQUNISyxVQUFVLEdBQUdDLFFBQVE7UUFDckJBLFFBQVEsR0FBRyxJQUFJLENBQUMsQ0FBQ0YsV0FBVyxDQUFDRSxRQUFRLEdBQUdyQixRQUFRLENBQUNlLENBQUMsQ0FBQyxDQUFDO01BQ3hEO0lBQ0o7RUFDSjs7RUFFQTtFQUNBLENBQUNJLFdBQVdHLENBQUNDLE9BQU8sRUFBRTtJQUNsQixPQUFPbEIsSUFBSSxDQUFDbUIsS0FBSyxDQUFDRCxPQUFPLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRztFQUMxQztBQUNKO0FBRUEsK0RBQWV0QyxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGZ0c3RhcnVwLy4vc3JjL3NjcmlwdHMvdW5pdHMuanM/MzhhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkYXRhRHJhZ29uVXJsID0gXCJodHRwczovL2RkcmFnb24ubGVhZ3Vlb2ZsZWdlbmRzLmNvbS9jZG4vXCI7XG5cbmNsYXNzIFVuaXRzIHtcbiAgICBjb25zdHJ1Y3RvcihsaXN0KSB7XG4gICAgICAgIHRoaXMubGlzdCA9IGxpc3Q7XG4gICAgfVxuXG4gICAgdW5pdFBvb2wob2Rkcykge1xuICAgICAgICBjb25zdCB0aWVycyA9IHRoaXMuI2F2YWlsYWJsZVRpZXJzKG9kZHMpO1xuICAgICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0aGlzLmxpc3QpLmZpbHRlcih1bml0ID0+IHRpZXJzLmluY2x1ZGVzKHVuaXQudGllcikpO1xuICAgIH1cbiAgICBcbiAgICByYW5kb21Vbml0KGF2YWlsYWJsZVVuaXRzLCB0aWVyT2Rkcykge1xuICAgICAgICBjb25zdCByYW5kb21UaWVyID0gdGhpcy4jcm9sbFRpZXIodGllck9kZHMpO1xuICAgICAgICBjb25zdCB0aWVyVW5pdHMgPSBhdmFpbGFibGVVbml0cy5maWx0ZXIodW5pdCA9PiB1bml0LnRpZXIgPT0gcmFuZG9tVGllcik7XG4gICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcih0aWVyVW5pdHMubGVuZ3RoICogTWF0aC5yYW5kb20oKSk7XG4gICAgICAgIHJldHVybiB0aWVyVW5pdHNbcmFuZG9tSW5kZXhdO1xuICAgIH1cbiAgICBcbiAgICBzaG9wVW5pdEltYWdlKHVuaXQpIHtcbiAgICAgICAgcmV0dXJuIGAke2RhdGFEcmFnb25Vcmx9MTMuMTguMS9pbWcvdGZ0LWNoYW1waW9uLyR7dW5pdC5pbWFnZS5mdWxsfWA7XG4gICAgfVxuXG4gICAgLy8gcHJpdmF0ZSBmdW5jdGlvbiBvbmx5IGludm9rZWQgYnkgdW5pdFBvb2xcbiAgICAjYXZhaWxhYmxlVGllcnMob2Rkcykge1xuICAgICAgICBjb25zdCB0aWVycyA9IFtdO1xuICAgICAgICBvZGRzLmZvckVhY2goKG9kZCwgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKG9kZCA+IDApIHRpZXJzLnB1c2goaSArIDEpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRpZXJzO1xuICAgIH1cblxuICAgIC8vIHByaXZhdGUgZnVuY3Rpb24gb25seSBpbnZva2VkIGJ5IHJhbmRvbVVuaXRcbiAgICAjcm9sbFRpZXIodGllck9kZHMpIHtcbiAgICAgICAgY29uc3Qgcm9sbCA9IHRoaXMuI3R3b0RlY2ltYWxzKE1hdGgucmFuZG9tKCkpO1xuICAgICAgICBsZXQgcmFuZ2VTdGFydCA9IDA7XG4gICAgICAgIGxldCByYW5nZUVuZCA9IHRpZXJPZGRzWzBdO1xuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSB0aWVyT2Rkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHJhbmdlU3RhcnQgPCByb2xsICYmIHJvbGwgPD0gcmFuZ2VFbmQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmFuZ2VTdGFydCA9IHJhbmdlRW5kO1xuICAgICAgICAgICAgICAgIHJhbmdlRW5kID0gdGhpcy4jdHdvRGVjaW1hbHMocmFuZ2VFbmQgKyB0aWVyT2Rkc1tpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwcml2YXRlIGZ1bmN0aW9uIG9ubHkgaW52b2tlZCBieSAjcm9sbFRpZXJcbiAgICAjdHdvRGVjaW1hbHMoZGVjaW1hbCkge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChkZWNpbWFsICogMTAwKSAvIDEwMDtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVuaXRzOyJdLCJuYW1lcyI6WyJkYXRhRHJhZ29uVXJsIiwiVW5pdHMiLCJjb25zdHJ1Y3RvciIsImxpc3QiLCJ1bml0UG9vbCIsIm9kZHMiLCJ0aWVycyIsImF2YWlsYWJsZVRpZXJzIiwiT2JqZWN0IiwidmFsdWVzIiwiZmlsdGVyIiwidW5pdCIsImluY2x1ZGVzIiwidGllciIsInJhbmRvbVVuaXQiLCJhdmFpbGFibGVVbml0cyIsInRpZXJPZGRzIiwicmFuZG9tVGllciIsInJvbGxUaWVyIiwidGllclVuaXRzIiwicmFuZG9tSW5kZXgiLCJNYXRoIiwiZmxvb3IiLCJsZW5ndGgiLCJyYW5kb20iLCJzaG9wVW5pdEltYWdlIiwiaW1hZ2UiLCJmdWxsIiwiI2F2YWlsYWJsZVRpZXJzIiwiZm9yRWFjaCIsIm9kZCIsImkiLCJwdXNoIiwiI3JvbGxUaWVyIiwicm9sbCIsInR3b0RlY2ltYWxzIiwicmFuZ2VTdGFydCIsInJhbmdlRW5kIiwiI3R3b0RlY2ltYWxzIiwiZGVjaW1hbCIsInJvdW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/units.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZnRzdGFydXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	!function() {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = function(queue) {
/******/ 			if(queue && queue.d < 1) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach(function(fn) { fn.r--; });
/******/ 				queue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = function(deps) { return deps.map(function(dep) {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then(function(r) {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, function(e) {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = function(fn) { fn(queue); };
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = function() {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}); };
/******/ 		__webpack_require__.a = function(module, body, hasAwait) {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = -1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise(function(resolve, rej) {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise["catch"](function() {}); };
/******/ 			module.exports = promise;
/******/ 			body(function(deps) {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = function() { return currentDeps.map(function(d) {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}); }
/******/ 				var promise = new Promise(function(resolve) {
/******/ 					fn = function() { resolve(getResult); };
/******/ 					fn.r = 0;
/******/ 					var fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };
/******/ 					currentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });
/******/ 			queue && queue.d < 0 && (queue.d = 0);
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;